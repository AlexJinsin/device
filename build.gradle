buildscript {
    repositories {
        maven {
            url 'http://maven.oschina.net/content/groups/public/'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE")
    }
}

subprojects {
    version '0.9.0-SNAPSHOT'

    apply plugin: 'java'

    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    repositories {
        maven {
            url 'http://maven.oschina.net/content/groups/public/'
        }
    }
    dependencies {

        compile 'org.slf4j:slf4j-api:1.7.12'
        compile 'org.slf4j:slf4j-ext:1.7.12'
        compile 'ch.qos.logback:logback-classic:1.1.3'
        compile 'commons-io:commons-io:2.4'
        compile 'org.apache.commons:commons-lang3:3.3.2'
        testCompile("junit:junit:4.12")
    }
    compileJava {

        options.encoding = 'utf-8'
        //enable incremental compilation
    }
}

project(':device-api') {

    ext {
        ddmlibVersion = '24.1.3'
    }
    dependencies {
        compile 'org.apache.commons:commons-exec:1.2'
        compile 'commons-cli:commons-cli:1.2'
        compile "com.android.tools.ddms:ddmlib:$ddmlibVersion"
        compile "com.android.tools:dvlib:$ddmlibVersion"
        compile "com.android.tools:sdklib:$ddmlibVersion"
        compile "com.android.tools:sdk-common:$ddmlibVersion"

    }
}

project(':device-node') {

    task copyKeeper(type: Copy) {
        from('../device-keeper/app')
        into(new File(sourceSets.main.output.resourcesDir, 'static'))
    }
    processResources.dependsOn = [copyKeeper];

    apply plugin: 'spring-boot'

    bootRun {
        addResources = false
    }
    dependencies {
        compile project(':device-api')
        compile("org.springframework.boot:spring-boot-starter-web")
        compile("org.springframework.boot:spring-boot-starter-actuator")
        compile("org.springframework.boot:spring-boot-starter-remote-shell")
        testCompile("org.springframework.boot:spring-boot-starter-test")
    }
}

